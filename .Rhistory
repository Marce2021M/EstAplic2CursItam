#procedemos a buscar el porqué
file[which(file$mpg==file$mpgmpge),]
#procedemos a buscar el porqué
file[which(file$mpg!==file$mpgmpge),]
#procedemos a buscar el porqué
file[which(file$mpg!=file$mpgmpge),]
#procedemos a buscar el porqué
file[which(file$mpg==file$mpgmpge),]
#procedemos a buscar el porqué
file[which(file$mpg!=file$mpgmpge),]
cat(paste("Hay ",length(unique(file$carclass)),"clases de vehículos"))
cat(paste("\nHay ",length(unique(file$carid)),"claves de clases de vehículos"))
cat(paste("Hay ",length(unique(file$carclass)),"clases de vehículos"))
cat(paste("\nHay ",length(unique(file$carclass_id)),"claves de clases de vehículos"))
#procedemos a buscar el porqué
file[which(file$carid!=file$carclass_id),]
unique(file$carclass)
unique(file$vehicle)
cat(paste("Hay ",length(unique(file$carclass)),"clases de vehículos"))
cat(paste("\nHay ",length(unique(file$carclass_id)),"claves de clases de vehículos"))
pairs <- datos %>% select(-c(ocupacion,censo)) %>% ggpairs(progress = F,mapping=ggplot2::aes(colour = tipo,alpha=0.8))
#CARGAMOS LIBRERÍAS
library(tidyverse)
library(ggplot2)
library(wordcloud)
#CARGAMOS LIBRERÍAS
library(tidyverse)
library(ggplot2)
library(wordcloud)
#CARGAMOS LIBRERÍAS
library(tidyverse)
library(ggplot2)
library(wordcloud)
install.packages("wordcloud")
install.packages("wordcloud2)
install.packages("tm")
install.packages("wordcloud2")
#CARGAMOS LIBRERÍAS
library(tidyverse)
library(ggplot2)
library(wordcloud)
library(wordcloud2)
library(tm)
install.packages("tm")
install.packages("forcats")
install.packages("GGally")
install.packages("outliers")
install.packages("ggcorrplot")
install.packages("forcats")
knitr::opts_chunk$set(echo = TRUE)
#CARGAMOS LIBRERÍAS
library(tidyverse)
library(ggplot2)
library(wordcloud)
library(wordcloud2)
library(tm)
library(forcats)
library(GGally)
library(outliers)
library(ggcorrplot)
file <- read.csv("datosFit.csv")
pairs <- datos %>% select(-c(ocupacion,censo)) %>% ggpairs(progress = F,mapping=ggplot2::aes(colour = tipo,alpha=0.8))
pairs <- file %>% select(-c(ocupacion,censo)) %>% ggpairs(progress = F,mapping=ggplot2::aes(colour = tipo,alpha=0.8))
pairs <- file %>% select(-c(carclass,carid)) %>% ggpairs(progress = F,mapping=ggplot2::aes(colour = tipo,alpha=0.8))
pairs <- file %>% select(-c(carclass,carid)) %>% ggpairs(progress = F,mapping=ggplot2::aes(colour =carclass_id,alpha=0.8))
pairs <- file %>% select(-c(carclass,carid)) %>% ggpairs(progress = F,mapping=ggplot2::aes(colour =carclass_id,alpha=0.8))
pairs <- file %>% select(-c(carclass,carid)) %>% ggpairs(progress = F,mapping=ggplot2::aes(alpha=0.8))
pairs <- file %>% select(-c(carclass,carid)) %>% ggpairs(progress = F,mapping=ggplot2::aes(colour =carclass_id,alpha=0.8))
pairs <- file %>% select(-c(carclass,carid)) %>% ggpairs(progress = T,mapping=ggplot2::aes(colour =carclass_id,alpha=0.8))
pairs <- file %>% select(-c(carclass,carid)) %>% ggpairs()
pairs <- file %>% select(-c(carclass,carid,vehicle)) %>% ggpairs(progress = F,mapping=ggplot2::aes(colour =carclass_id,alpha=0.8))
pairs
pairs <- file %>% select(-c(carclass,carid,vehicle)) %>% ggpairs(progress = F,mapping=ggplot2::aes(colour =carclass,alpha=0.8))
pairs
pairs <- file %>% select(-c(carclass,carid,vehicle)) %>% ggpairs(progress = F,mapping=ggplot2::aes(colour =carclass,alpha=0.8))
pairs
pairs <- file %>% select(-c(carclass_id,carid,vehicle)) %>% ggpairs(progress = F,mapping=ggplot2::aes(colour =carclass,alpha=0.8))
pairs
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(wordcloud)
library(wordcloud2)
library(tm)
library(forcats)
library(GGally)
library(outliers)
library(ggcorrplot)
datos <- read.table("control1.dat", header=T)
hist(file$year,main="Distribución de los años de vehículos",
xlab = "Años de vehículos",ylab="Frecuencia",breaks=20)
abline(v = mean(file$year),col="blue")
abline(v=median(file$year),col="red",lty=2)
boxplot(file$year,add = T,horizontal = T,width = 4,col="pink",at = 5)
legend(14,13,legend=c("Mediana", "Media"),
col=c("red", "blue"), lty=c(2,1), cex=0.8)
qqnorm(datos$educacion, main = "Educacion")
hist(file$year,main="Distribución de los años de vehículos",
xlab = "Años de vehículos",ylab="Frecuencia",breaks=20)
abline(v = mean(file$year),col="blue")
abline(v=median(file$year),col="red",lty=2)
boxplot(file$year,add = T,horizontal = T,width = 4,col="pink",at = 5)
legend(14,13,legend=c("Mediana", "Media"),
col=c("red", "blue"), lty=c(2,1), cex=0.8)
qqnorm(file$year, main = "Años")
hist(file$year,main="Distribución de los años de vehículos",
xlab = "Años de vehículos",ylab="Frecuencia",breaks=20)
abline(v = mean(file$year),col="blue")
abline(v=median(file$year),col="red",lty=2)
boxplot(file$year,add = T,horizontal = T,width = 4,col="pink",at = 5)
legend(2013,2009,legend=c("Mediana", "Media"),
col=c("red", "blue"), lty=c(2,1), cex=0.8)
qqnorm(file$year, main = "Años" )
hist(file$year,main="Distribución de los años de vehículos",
xlab = "Años de vehículos",ylab="Frecuencia",breaks=20)
abline(v = mean(file$year),col="blue")
abline(v=median(file$year),col="red",lty=2)
boxplot(file$year,add = T,horizontal = T,width = 4,col="pink",at = 5)
#legend(2013,2009,legend=c("Mediana", "Media"),
#
qqnorm(file$year, main = "Años" )
hist(file$year,main="Distribución del precio de los vehículos híbridos",
xlab = "Años de vehículos",ylab="Frecuencia",breaks=20)
abline(v = mean(file$year),col="blue")
abline(v=median(file$year),col="red",lty=2)
boxplot(file$year,add = T,horizontal = T,width = 4,col="pink",at = 5)
#legend(2013,2009,legend=c("Mediana", "Media"),
#
qqnorm(file$year, main = "Años" )
hist(file$year,main="Distribución del precio de los vehículos híbridos",
xlab = "Precio de vehículos",ylab="Frecuencia",breaks=20)
abline(v = mean(file$msrp),col="blue")
abline(v=median(file$msrp),col="red",lty=2)
boxplot(file$msrp,add = T,horizontal = T,width = 4,col="pink",at = 5)
#legend(2013,2009,legend=c("Mediana", "Media"),
#
qqnorm(file$msrp, main = "Precio" )
hist(file$msrp,main="Distribución del precio de los vehículos híbridos",
xlab = "Precio de vehículos",ylab="Frecuencia",breaks=20)
abline(v = mean(file$msrp),col="blue")
abline(v=median(file$msrp),col="red",lty=2)
boxplot(file$msrp,add = T,horizontal = T,width = 4,col="pink",at = 5)
#legend(2013,2009,legend=c("Mediana", "Media"),
#
qqnorm(file$msrp, main = "Precio" )
hist(file$accelrate,main="Distribución de la tasa de aceleración",
xlab = "Tasa de aceleración",ylab="Frecuencia",breaks=20)
abline(v = mean(file$accelrate),col="blue")
abline(v=median(file$accelrate),col="red",lty=2)
boxplot(file$accelrate,add = T,horizontal = T,width = 4,col="pink",at = 5)
#legend(2013,2009,legend=c("Mediana", "Media"),
#
qqnorm(file$msrp, main = "Tasa de aceleración" )
hist(file$accelrate,main="Distribución de la tasa de aceleración",
xlab = "Tasa de aceleración",ylab="Frecuencia",breaks=20)
abline(v = mean(file$accelrate),col="blue")
abline(v=median(file$accelrate),col="red",lty=2)
boxplot(file$accelrate,add = T,horizontal = T,width = 4,col="pink",at = 5)
#legend(2013,2009,legend=c("Mediana", "Media"),
#
qqnorm(file$msrp, main = "Tasa de aceleración" )
hist(file$mpg,main="Distribución del consumo de combustible",
xlab = "Consumo de combustible",ylab="Frecuencia",breaks=20)
abline(v = mean(file$mpg),col="blue")
abline(v=median(file$mpg),col="red",lty=2)
boxplot(file$mpg,add = T,horizontal = T,width = 4,col="pink",at = 5)
#legend(2013,2009,legend=c("Mediana", "Media"),
#
qqnorm(file$mpg, main = "Consumo de combustible" )
hist(file$mpg,main="Distribución del consumo de combustible",
xlab = "Consumo de combustible",ylab="Frecuencia",breaks=20)
abline(v = mean(file$mpg),col="blue")
abline(v=median(file$mpg),col="red",lty=2)
boxplot(file$mpg,add = T,horizontal = T,width = 4,col="pink",at = 5)
#legend(2013,2009,legend=c("Mediana", "Media"),
#
qqnorm(file$mpg, main = "Consumo de combustible" )
hist(file$mpgmpge,main="Distribución del máximo consumo de combustible",
xlab = "Máximo consumo de combustible",ylab="Frecuencia",breaks=20)
abline(v = mean(file$mpgmpge),col="blue")
abline(v=median(file$mpgmpge),col="red",lty=2)
boxplot(file$mpg,add = T,horizontal = T,width = 4,col="pink",at = 5)
#legend(2013,2009,legend=c("Mediana", "Media"),
#
qqnorm(file$mpgmpge, main = "Máximo consumo de combustible" )
hist(file$carclass,main="Distribución del máximo consumo de combustible",
xlab = "Máximo consumo de combustible",ylab="Frecuencia",breaks=20)
glimpse(file)
summary(file)
file$carclass<-as.factor(file$carclass)
mod1<- lm(msrp~mpg+accelrate+msrp+year+carclass)
mod1<- lm(msrp~mpg+accelrate+msrp+year+carclass,data = file)
mod1<- lm(msrp~mpg+accelrate+msrp+year+carclass,data = file)
summary(mod1)
mod1<- lm(msrp~mpg+accelrate+msrp+year+carclass,data = file)
summary(mod1)
knitr::opts_chunk$set(echo = TRUE)
#CARGAMOS LIBRERÍAS
library(tidyverse)
library(ggplot2)
library(wordcloud)
library(wordcloud2)
library(tm)
library(forcats)
library(GGally)
library(outliers)
library(ggcorrplot)
file <- read.csv("datosFit.csv")
glimpse(file)
summary(file)
file$carclass<-as.factor(file$carclass)
# Búsqueda de NA en la base de datos
numNA<-sum(is.na(file))
cat(paste("Hay ",numNA,"NA de la forma usual "))
cat(paste("\n"))
file[which(file == "<NA>",arr.ind = TRUE)[,1],]
cat(paste("Hay ",length(unique(file$carclass)),"clases de vehículos"))
cat(paste("\nHay ",length(unique(file$carid)),"claves de clases de vehículos"))
cat(paste("Hay ",length(unique(file$mpg)),"registros de mpg"))
cat(paste("\nHay ",length(unique(file$mpgmpge)),"registros de mpgmpge"))
#procedemos a buscar el porqué
file[which(file$mpg!=file$mpgmpge),]
cat(paste("Hay ",length(unique(file$carclass)),"clases de vehículos"))
cat(paste("\nHay ",length(unique(file$carclass_id)),"claves de clases de vehículos"))
hist(file$year,main="Distribución de los años de vehículos",
xlab = "Años de vehículos",ylab="Frecuencia",breaks=20)
abline(v = mean(file$year),col="blue")
abline(v=median(file$year),col="red",lty=2)
boxplot(file$year,add = T,horizontal = T,width = 4,col="pink",at = 5)
#legend(2013,2009,legend=c("Mediana", "Media"),
#
hist(file$msrp,main="Distribución del precio de los vehículos híbridos",
xlab = "Precio de vehículos",ylab="Frecuencia",breaks=20)
abline(v = mean(file$msrp),col="blue")
abline(v=median(file$msrp),col="red",lty=2)
boxplot(file$msrp,add = T,horizontal = T,width = 4,col="pink",at = 5)
#legend(2013,2009,legend=c("Mediana", "Media"),
#
hist(file$accelrate,main="Distribución de la tasa de aceleración",
xlab = "Tasa de aceleración",ylab="Frecuencia",breaks=20)
abline(v = mean(file$accelrate),col="blue")
abline(v=median(file$accelrate),col="red",lty=2)
boxplot(file$accelrate,add = T,horizontal = T,width = 4,col="pink",at = 5)
#legend(2013,2009,legend=c("Mediana", "Media"),
#
qqnorm(file$msrp, main = "Tasa de aceleración" )
hist(file$mpg,main="Distribución del consumo de combustible",
xlab = "Consumo de combustible",ylab="Frecuencia",breaks=20)
abline(v = mean(file$mpg),col="blue")
abline(v=median(file$mpg),col="red",lty=2)
boxplot(file$mpg,add = T,horizontal = T,width = 4,col="pink",at = 5)
#legend(2013,2009,legend=c("Mediana", "Media"),
#
qqnorm(file$mpg, main = "Consumo de combustible" )
hist(file$mpgmpge,main="Distribución del máximo consumo de combustible",
xlab = "Máximo consumo de combustible",ylab="Frecuencia",breaks=20)
abline(v = mean(file$mpgmpge),col="blue")
abline(v=median(file$mpgmpge),col="red",lty=2)
boxplot(file$mpg,add = T,horizontal = T,width = 4,col="pink",at = 5)
#legend(2013,2009,legend=c("Mediana", "Media"),
#
qqnorm(file$mpgmpge, main = "Máximo consumo de combustible" )
geom_bar(file$carclass,main="Cantidad de vehículos por clase",
xlab = "Clases",ylab="Cantidad",breaks=20)
geom_bar(file$carclass,main="Cantidad de vehículos por clase",
xlab = "Clases",ylab="Cantidad",aes(x=carclass))
geom_bar(file,main="Cantidad de vehículos por clase",
xlab = "Clases",ylab="Cantidad",aes(x=carclass))
ggplot(data = file) +
geom_bar(mapping = aes(x = carclass), fill="steelblue", color="black")+
ggtitle("Tipo de profesion")
ggplot(data = file) +
geom_bar(mapping = aes(x = carclass), fill="steelblue", color="black")+
ggtitle("Cantidad de vehículos por clase")
modelos <- Corpus(VectorSource(file$vehicle))
dtm <- TermDocumentMatrix(modelos)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
wordcloud::wordcloud(words=d$word,freq = d$freq,min.freq = 1,scale=c(.75,.8),colors = brewer.pal(4, "Dark2"),random.order=FALSE, rot.per=0.2,random.color=T)
pairs <- file %>% select(-c(carclass_id,carid,vehicle)) %>% ggpairs(progress = F,mapping=ggplot2::aes(colour =carclass,alpha=0.8))
pairs
?ggpairs
pairs <- file %>% select(-c(carclass_id,carid,vehicle)) %>% ggpairs(progress = T,mapping=ggplot2::aes(colour =carclass,alpha=0.8))
pairs
pairs <- file %>% select(-c(carclass_id,carid,vehicle)) %>% ggpairs(progress = F,mapping=ggplot2::aes(colour =carclass,alpha=0.8))
pairs
pairs <- file %>% select(-c(carclass_id,carid,vehicle)) %>% ggpairs(progress = F,mapping=ggplot2::aes(colour =carclass,alpha=0.8), proportions = auto )
pairs <- file %>% select(-c(carclass_id,carid,vehicle)) %>% ggpairs(progress = F,mapping=ggplot2::aes(colour =carclass,alpha=0.8), proportions = "auto" )
pairs
pairs <- file %>% select(-c(carclass_id,carid,vehicle)) %>% ggpairs(progress = F,mapping=ggplot2::aes(colour =carclass,alpha=0.8), proportions = "auto" , showStrips = T)
pairs
pairs <- file %>% select(-c(carclass_id,carid,vehicle)) %>% ggpairs(progress = F,mapping=ggplot2::aes(colour =carclass,alpha=0.8), proportions = "auto" , columns = c("year","msrp","accelrate", "mpg", "mpgmpge"))
pairs
pairs <- file %>% select(-c(carclass_id,carid,vehicle)) %>% ggpairs(progress = F,mapping=ggplot2::aes(colour =carclass,alpha=0.8), proportions = "auto" , columns = c("year","msrp","accelrate", "mpg", "mpgmpge"),legends = T )
pairs
pairs <- file %>% select(-c(carclass_id,carid,vehicle)) %>% ggpairs(progress = F,mapping=ggplot2::aes(colour =carclass,alpha=0.8), proportions = "auto" , columns = c("year","msrp","accelrate", "mpg", "mpgmpge") )
pairs
pairs <- file %>% select(-c(carclass_id,carid,vehicle)) %>% ggpairs(progress = F,mapping=ggplot2::aes(colour =carclass,alpha=0.8), proportions = "auto" , columns = c("year","carclass","accelrate", "mpg", "mpgmpge") )
pairs
pairs <- file %>% select(-c(carclass_id,carid,vehicle)) %>% ggpairs(progress = F,mapping=ggplot2::aes(colour =carclass,alpha=0.8), proportions = "auto" , columns = c("year","accelrate", "mpg", "mpgmpge") )
pairs
pairs <- file %>% select(-c(carclass_id,carid,vehicle)) %>% ggpairs(progress = F,mapping=ggplot2::aes(colour =carclass,alpha=0.6), proportions = "auto" , columns = c("year","accelrate", "mpg", "mpgmpge") )
pairs
pairs <- file %>% select(-c(carclass_id,carid,vehicle)) %>% ggpairs(progress = F,mapping=ggplot2::aes(colour =carclass,alpha=0.4), proportions = "auto" , columns = c("year","accelrate", "mpg", "mpgmpge") )
pairs
pairs <- file %>% select(-c(carclass_id,carid,vehicle)) %>% ggpairs(progress = F,mapping=ggplot2::aes(colour =carclass,alpha=0.1), proportions = "auto" , columns = c("year","accelrate", "mpg", "mpgmpge") )
pairs
pairs <- file %>% select(-c(carclass_id,carid,vehicle)) %>% ggpairs(progress = F,mapping=ggplot2::aes(colour =carclass,alpha=0.1,size=.1), proportions = "auto" , columns = c("year","accelrate", "mpg", "mpgmpge") )
pairs
pairs <- file %>% select(-c(carclass_id,carid,vehicle)) %>% ggpairs(progress = F,mapping=ggplot2::aes(colour =carclass,alpha=0.1), proportions = "auto" , ,size=.1,columns = c("year","accelrate", "mpg", "mpgmpge") )
pairs
pairs <- file %>% select(-c(carclass_id,carid,vehicle)) %>% ggpairs(progress = F,mapping=ggplot2::aes(colour =carclass,alpha=0.1), proportions = "auto" , ,size=.01,columns = c("year","accelrate", "mpg", "mpgmpge") )
pairs
pairs <- file %>% select(-c(carclass_id,carid,vehicle)) %>% ggpairs(progress = F,mapping=ggplot2::aes(colour =carclass,alpha=0.1), proportions = "auto" , size=.01,columns = c("year","accelrate", "mpg", "mpgmpge") )
pairs
pairs <- file %>% select(-c(carclass_id,carid,vehicle)) %>% ggpairs(progress = F,mapping=ggplot2::aes(colour =carclass,alpha=0.1), proportions = "auto" , size=.01,columns = c("year","accelrate", "mpg", "mpgmpge","msrp") )
pairs
pairs <- file %>% select(-c(carclass_id,carid,vehicle)) %>% ggpairs(progress = F, proportions = "auto" , size=.01,columns = c("year","accelrate", "mpg", "mpgmpge","msrp") )
pairs
pairs <- file %>% select(-c(carclass_id,carid,vehicle)) %>% ggpairs(progress = F, proportions = "auto" , size=.01,columns = c("year","accelrate", "mpg", "mpgmpge","msrp","carclass") )
pairs
ggplot(data = file)+
geom_boxplot(aes(x=carclass))
ggplot(data = file)+
geom_boxplot(aes(x=carclass, y=msrp))
ggplot(data = file)+
geom_dotplot(aes(x=accelrate, y=msrp))
ggplot(data = file)+
geom_hex(aes(x=accelrate, y=msrp))
ggplot(data = file,aes(x=accelrate, y=msrp))
ggplot(data = file,aes(x=accelrate, y=msrp))
ggplot(data = file,aes(x=accelrate, y=msrp))
ggplot(data = file,mapping = aes(x=accelrate, y=msrp))
scatter.smooth(data = file,mapping = aes(x=accelrate, y=msrp))
scatter(data = file,mapping = aes(x=accelrate, y=msrp))
plot(data = file,mapping = aes(x=accelrate, y=msrp))
plot(data = file,x=accelrate, y=msrp)
plot(x=accelrate, y=msrp, data = file)
plot(x="accelrate", y="msrp", data = file)
plot(x="accelrate", y="msrp", data = file)
plot(x=file$accelrate, y=file$msrp)
plot(x=file$accelrate, y=file$msrp, xlab = "Tasa de aceleración",ylab = "Precio")
plot(x=file$accelrate, y=file$msrp, xlab = "Tasa de aceleración",ylab = "Precio", colours("red"))
plot(x=file$accelrate, y=file$msrp, xlab = "Tasa de aceleración",ylab = "Precio")
plot(x=file$mpg, y=file$msrp, xlab = "Consumo de combustible",ylab = "Precio")
mod1<- lm(msrp~mpg+accelrate+msrp+year+carclass,data = file)
summary(mod1)
mod1<- lm(msrp~mpg+accelrate+year+carclass+mpgmpge,data = file)
summary(mod1)
mod1<- lm(msrp~accelrate+mpg+year+carclass+mpgmpge,data = file)
summary(mod1)
mod1<- lm(msrp~accelrate+mpg+year+carclass+mpgmpge+vehicle,data = file)
summary(mod1)
mod1<- lm(msrp~accelrate+mpg+year+carclass+vehicle,data = file)
summary(mod1)
mod1<- lm(msrp~accelrate+mpg+year+carclass+mpgmpge,data = file)
summary(mod1)
mod1<- lm(msrp~accelrate+mpg+year+carclass+mpgmpge+vehicle,data = file)
summary(mod1)
?lm
pairs <- file %>% select(-c(carclass_id,carid,vehicle)) %>% ggpairs(progress = F, proportions = "auto" , size=.01,columns = c("year","accelrate", "mpg", "mpgmpge","msrp","carclass","vehicles") )
pairs <- file %>% select(-c(carclass_id,carid,vehicle)) %>% ggpairs(progress = F, proportions = "auto" , size=.01,columns = c("year","accelrate", "mpg", "mpgmpge","msrp","carclass","vehicle") )
pairs <- file %>% select(-c(carclass_id,carid)) %>% ggpairs(progress = F, proportions = "auto" , size=.01,columns = c("year","accelrate", "mpg", "mpgmpge","msrp","carclass","vehicle") )
pairs <- file %>% select(-c(carclass_id,carid,vehicle)) %>% ggpairs(progress = F, proportions = "auto" , size=.01,columns = c("year","accelrate", "mpg", "mpgmpge","msrp","carclass") )
pairs
mod1<- lm(msrp~accelrate+mpg+year+carclass+mpgmpge,data = file)
summary(mod1)
vif(mod1)
VIF(mod1)
library(car)
install.packages("car")
library(car)
vif(mod1)
mod1<- lm(msrp~accelrate+mpg+year+carclass+mpgmpge+vehicle,data = file)
summary(mod1)
vif(mod1)
mod1<- lm(msrp~accelrate+mpg+year+carclass+mpgmpge,data = file)
summary(mod1)
vif(mod1)
?vif
vif(mod1)
ka<- eigen(mod1)
vif(mod1)
ka<- mod1$rank
ka<- mod1$rank
vif(mod1)
ka<- mod1$rank
ka
vif(mod1)
ka<- mod1$rank
summary(mod1)
mod1
vif(mod1)
ka<- mod1$rank
anova(mod1)
mod1$effects
mod1$qr
?mod1
install.packages("broom")
install.packages("broom")
library(broom)
glance(mod1)
knitr::opts_chunk$set(echo = TRUE)
vif(mod1)
vif(mod1)
vif(mod1)
vif(mod1)
vif(mod1)
vif(mod1)
knitr::opts_chunk$set(echo = TRUE)
#CARGAMOS LIBRERÍAS
library(tidyverse)
library(ggplot2)
library(wordcloud)
library(wordcloud2)
library(tm)
library(forcats)
library(GGally)
library(outliers)
library(ggcorrplot)
library(car)
file <- read.csv("datosFit.csv")
glimpse(file)
summary(file)
file$carclass<-as.factor(file$carclass)
# Búsqueda de NA en la base de datos
numNA<-sum(is.na(file))
cat(paste("Hay ",numNA,"NA de la forma usual "))
cat(paste("\n"))
file[which(file == "<NA>",arr.ind = TRUE)[,1],]
mod1<- lm(msrp~accelrate+mpg+year+carclass+mpgmpge,data = file)
summary(mod1)
vif(mod1)
ka<- mod1$rank
modAIC <- stepAIC(lm(Y˜1,data=dat), scope=msrp~accelrate+mpg+year+carclass+mpgmpge,
direction=c("both","forward","backward")[2], trace=3)
modAIC <- stepAIC(lm(msrp~1,data=dat), scope=msrp~accelrate+mpg+year+carclass+mpgmpge,
direction=c("both","forward","backward")[2], trace=3)
install.packages("MASS")
library("MASS")
modAIC <- stepAIC(lm(msrp~1,data=dat), scope=msrp~accelrate+mpg+year+carclass+mpgmpge,
direction=c("both","forward","backward")[2], trace=3)
modAIC <- stepAIC(lm(msrp~1,data=file), scope=msrp~accelrate+mpg+year+carclass+mpgmpge,
direction=c("both","forward","backward")[2], trace=3)
modAIC <- stepBIC(lm(msrp~1,data=file), scope=msrp~accelrate+mpg+year+carclass+mpgmpge,
direction=c("both","forward","backward")[2], trace=3)
scaleEigen <- function(fit){
# Calculate the eigenvalues and eigenvectors
#
# args: fit - an object of the lm or glm class from which you would
#             like to extract the X matrix
#
# Output: eigenvalues and eigenvectors of the X'X matrix
#
# Method:
#         fit <- lm(y ~ x1 + x2 + x3, data = dataset)
#         summary(fit)
#         scaledEigen(fit)
#
model.data <- fit$model  # The data used in the regression
Xvec <- as.matrix(cbind(1, model.data[,-1]))  # X matrix including intercept
Xvec <- apply(Xvec, 2 , function(x) x/sqrt(sum(x^2)))  # Rescale the X matrix
eigenValues <- eigen(t(Xvec)%*%Xvec)
return(eigenValues)
}
scaleEigen <- function(fit){
# Calculate the eigenvalues and eigenvectors
#
# args: fit - an object of the lm or glm class from which you would
#             like to extract the X matrix
#
# Output: eigenvalues and eigenvectors of the X'X matrix
#
# Method:
#         fit <- lm(y ~ x1 + x2 + x3, data = dataset)
#         summary(fit)
#         scaledEigen(fit)
#
model.data <- fit$model  # The data used in the regression
Xvec <- as.matrix(cbind(1, model.data[,-1]))  # X matrix including intercept
#Xvec <- apply(Xvec, 2 , function(x) x/sqrt(sum(x^2)))  # Rescale the X matrix
eigenValues <- eigen(t(Xvec)%*%Xvec)
return(eigenValues)
}
scaleEigen(mod1)
scaleEigen <- function(fit){
# Calculate the eigenvalues and eigenvectors
#
# args: fit - an object of the lm or glm class from which you would
#             like to extract the X matrix
#
# Output: eigenvalues and eigenvectors of the X'X matrix
#
# Method:
#         fit <- lm(y ~ x1 + x2 + x3, data = dataset)
#         summary(fit)
#         scaledEigen(fit)
#
model.data <- fit$model  # The data used in the regression
Xvec <- as.matrix(cbind(1, model.data[,-1]))  # X matrix including intercept
Xvec <- apply(Xvec, 2 , function(x) x/sqrt(sum(x^2)))  # Rescale the X matrix
eigenValues <- eigen(t(Xvec)%*%Xvec)
return(eigenValues)
}
scaleEigen(mod1)
mod1
Summary(mod1)
summary(mod1)
residualPlots(mod1)
mod1
print(mod1)
plot(mod1)
